<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ynjh.personal.dao.user.UserMapper">
    <!-- 注册 只有userId和userPassword，其余为一个默认值 -->
    <insert id="addUser" parameterType="User" >
        insert into `user` (userLoginId,userPassword,userName,userGender,userEmail,userRealName,userIDCard,userIDImgFace,userIDImgCon,userCreateDate,userHeadImgPath,userBirthday) 
        values(#{userLoginId},#{userPassword},#{userName},#{userGender},#{userEmail},#{userRealName},#{userIDCard},#{userIDImgFace},#{userIDImgCon},#{userCreateDate},#{userHeadImgPath},#{userBirthday})
    </insert>
    <!-- 充值记录 -->
	<insert id="addUserCharge" parameterType="UserCharge">
		insert into usercharge(userId,userChargeTime,userChargeMoney,userChargeType,userChargeContent) value(#{userId},#{userChargeTime},#{userChargeMoney},#{userChargeType},#{userChargeContent})
	</insert>
	<!-- 牟勇：根据指定的主键id，修改用户表中某个指定的属性 -->
	<update id="updateUserProperty">
		update `user` set ${column}=#{value} where id=#{id}
	</update>
    <!-- 完善用户信息（修改user表）：性别、email、出生日期、昵称 -->
    <update id="updateUserOther" parameterType="Integer">
        update `user` set userGender=#{userGender},userEmail=#{userEmail},userBirthday=#{userBirthday},userName=#{userName} where id=#{id}
    </update>
    <!-- 实名认证（修改user表）：真实姓名、身份证号码、身份证图片(正反面) -->
    <update id="updateUserIDCord" parameterType="User">
        update `user` set userRealName=#{userRealName},userIDCard=#{userIDCard},userIDImgFace=#{userIDImgFace},userIDImgCon=#{userIDImgCon} where id=#{id}
    </update>
    <!-- 修改用户信息：头像、性别、email、出生日期、昵称 -->
	<update id="updateUser" parameterType="User">
	    update `user` set userHeadImgPath=#{userHeadImgPath},userGender=#{userGender},userEmail=#{userEmail},userBirthday=#{userBirthday},userName=#{userName} where id=#{id}
	</update>
	<!-- 修改用户密码 -->
	<update id="updateUserPasswordById" parameterType="User">
	    update `user` set userPassword=#{userPassword} where id=#{userId}
	</update>
	
	<!-- 修改用户头像 -->
	<update id="updateUserHeadImgPathById" parameterType="User">
	    update `user` set userHeadImgPath=#{userHeadImgPath} where id=#{userId}
	</update>
	<!-- 充值 -->
	<update id="updateMoney" >
	    update `user` set userMoney=#{userMoney} where id=#{id}
	</update>
    <!-- 登录 :邮箱或手机号。牟勇：用户状态不能是禁用状态 -->
    <select id="findByUserIdAndUserPassword"  resultType="User">
        select * from  `user` where (userLoginId=#{userLoginId} or userEmail=#{userLoginId}) and userPassword=#{userPassword} and userStatus!=3
    </select>
	<!-- 根据id查询用户（显示用户信息） -->
	<select id="findUserById" resultType="User" parameterType="Integer">
	    select * from `user` where id=#{id}
	</select>
	
	<!-- 人才信息列表(牟勇：不包含登录人自己) -->
	<select id="findUserList" resultType="UserAndResume">
		select r.resumeJor,r.resumeWorks,r.resumeEducation,u.* from resume r,user u where r.userId=u.id and userLoginId &lt;&gt; #{userLoginId}
		<if test="page!=null">
			limit #{page},20
		</if>
	</select>
	<select id="getMaxUserList" resultType="Integer" parameterType="String">
		<![CDATA[select count(*) from resume r,user u where r.userId=u.id and not userLoginId <> #{userLoginId}]]>  
	</select>
	<!-- 人才信息列表2 -->
	<select id="findUserListForOther" resultType="UserAndResume" parameterType="Integer">
		select r.resumeJor,r.resumeWorks,r.resumeEducation,u.* from resume r,user u where r.userId=u.id
		<if test="page!=null">
			limit #{page},20
		</if>
	</select>
	<select id="getMaxUserListForOther" resultType="Integer">
		select count(*) from resume r,user u where r.userId=u.id
	</select>
	<!-- 企业信息列表 -->
	<select id="findCompanyList" resultType="CompanyList" parameterType="Integer">
		select * from company c,companyintroduction ci where c.companyStatus=1 and c.id=ci.companyId and ci.cmpIntStatus=2
		<if test="page!=null">
			limit #{page},20
		</if>
	</select>
	<!-- 企业信息列表分页 -->
	<select id="getMaxCompanyList" resultType="Integer">
		select count(*) from company c,companyintroduction ci where c.companyStatus=1 and c.id=ci.companyId and ci.cmpIntStatus=2
	</select>
	<!-- 匹配用户名是否重复 -->
	<select id="verificationUserLoginId" parameterType="String" resultType="User">
		select userLoginId from user where userLoginId=#{userLoginId}
	</select>
	<!-- 牟勇：根据用户id查询用户的余额 -->
	<select id="findUserMoneyById" parameterType="Integer" resultType="Integer">
		select userMoney from `user` where id=#{id}
	</select>
	<!-- 牟勇：按文章总数，点赞总数降序排序，取前10，加被关注数 -->
	<select id="findUser10ByArticleCountAndLikeNum" resultType="map">
		select a.id,count(byFollowId) byFollowNumber,max(a.userHeadImgPath) userHeadImgPath,max(a.userLoginId) userLoginId,max(a.userName) userName,max(a.articleNumber) articleNumber,max(a.articleLikeNum) likeNum 
		from (select u.id,max(u.userHeadImgPath) userHeadImgPath,max(u.userLoginId) userLoginId,max(u.userName) userName,count(a.id) articleNumber,sum(a.articleLikeNum) articleLikeNum 
				from user u,article a 
				where u.id=a.usersId group by u.id 
				limit 0,10) a left join follow f on a.id=f.byFollowId 
		group by a.id
		order by a.articleNumber desc,a.articleLikeNum desc
	</select>
</mapper>